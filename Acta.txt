Cambios realizados (15/04/2014)
Nuevo atributo "activo" en la clase User, lo he introducido por lo que te comente ayer de los conflictos que se pod�an producir 
al borrarlo
-Julio: ok habia puesto el booleano activo en organizacion, no se en que lugar esta mejor, ya lo discutiremos

Actualic� la base de datos con ese campo, y en  la tabla Component, establec� como clave primaria orgHave
para evitar que una organizaci�n pueda ser poseida por varias organizaciones

Cambios realizados(17/04/2014)
He empezado a implementar el paqueta business con tres historias de usuario(Actualizar docs, ONG's y Usuarios)
Tambien he a�adido las clases CommandExecutor y Jpa en sus respectivos paquetes para poder llevar a cabo la persistencia

Cambios realizados (19/04/2014)

-Agregada funcionalidad para:

	incluir documentos de información, falta incorporar la logica de almacenaje de los ficheros.( empleado, admin ong, admin)

 	borrar documentos de información ( empleado, admin ong, admin)
 	
 	agregar empleados a una organizacion (admin ong, admin)
 	
 	borrar empleados de una organizacion (admin ong, admin)
 	
 	agregar ONG (admin)
 	
 	borrar ONG (admin)
 	
 -Veo la necesidad de crear los listados de información que se le debe mostrar a cada tipo de usuario, con el fin
 de que seleccionen la funcionalidad que deseen sobre la ong, usuario, documento que escojan. Intentaré hacer yo uno para empezar.
 	
 -Asumo que agregar fuentes externas de información se trata de incorporar links a los UploadDocs guardando el string
 de la URL en el campo indicador.
 
 Cambios realizados(19/04/2014)
Finalizadas las historias de usuario restantes(agregar y modificar fuentes externas) para los 3 tipos de empleados	
Tal y como dices, añadir un fuente externa es solo añadir un link al campo indicador, pero para poder diferenciar las fuentes externas de lo demás
añadi un campo "external_source" al modelo y a la base de datos de la tabla UploadDocs, donde mediante un boolean indicaremos con un true si la fila hace referencia a una fuente externa
Añadi tambien la clase servicesFactory en el paquete conf

Cambios realizados (21/04/2014) (actualización rapida julio)

-He modificado la forma de agregar y borrar elementos en la base de datos debido a el cambio de planteamiento
acerca de como devolver los listados de información.

-Consultas agregadas:
		consulta de usuario por login con comprobación de password para la funcionalidad de logear un usuario.
		
		listado de documentos subidos por un empleado. (empleado, admin ong, admin)
		
		listado de organizaciones totales. ( admin)

Acabo de caer en la cuenta de que si varios tipos de usuarios comparten la funcionalidad de actualizar los
documentos por ejemplo, duplicar la clase en los diferentes paquetes es una tonteria. Opto por dejar tan solo
una de cada tipo, si es que el usuario que la manipula no tiene ningun tipo de funcionalidad añadida.